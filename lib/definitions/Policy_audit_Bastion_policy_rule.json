{
    "if": {
      "allOf": [
        {
          "field": "type",
          "equals": "microsoft.network/bastionhosts"
        },
        {
          "anyOf": [
            {
              "value": "[first(parameters('resourceLocationList'))]",
              "equals": "*"
            },
            {
              "field": "location",
              "in": "[parameters('resourceLocationList')]"
            }
          ]
        }
      ]
    },
    "then": {
      "effect": "[parameters('effect')]",
      "details": {
        "type": "Microsoft.Insights/diagnosticSettings",
        "existenceCondition": {
          "allOf": [
            {
              "count": {
                "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                "where": {
                  "allOf": [
                    {
                      "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled",
                      "equals": "[equals(parameters('categoryGroup'), 'audit')]"
                    },
                    {
                      "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup",
                      "equals": "audit"
                    }
                  ]
                }
              },
              "equals": 1
            },
            {
              "count": {
                "field": "Microsoft.Insights/diagnosticSettings/logs[*]",
                "where": {
                  "allOf": [
                    {
                      "field": "Microsoft.Insights/diagnosticSettings/logs[*].enabled",
                      "equals": "[equals(parameters('categoryGroup'), 'allLogs')]"
                    },
                    {
                      "field": "microsoft.insights/diagnosticSettings/logs[*].categoryGroup",
                      "equals": "allLogs"
                    }
                  ]
                }
              },
              "equals": 1
            },
            {
              "field": "Microsoft.Insights/diagnosticSettings/workspaceId",
              "equals": "[parameters('logAnalytics')]"
            }
          ]
        },
        "roleDefinitionIds": [
          "/providers/Microsoft.Authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293"
        ],
        "deployment": {
          "properties": {
            "mode": "incremental",
            "template": {
              "$schema": "http://schema.management.azure.com/schemas/2019-08-01/deploymentTemplate.json#",
              "contentVersion": "1.0.0.0",
              "parameters": {
                "diagnosticSettingName": {
                  "type": "string"
                },
                "logAnalytics": {
                  "type": "string"
                },
                "categoryGroup": {
                  "type": "String"
                },
                "resourceName": {
                  "type": "string"
                }
              },
              "variables": {},
              "resources": [
                {
                  "type": "microsoft.network/bastionhosts/providers/diagnosticSettings",
                  "apiVersion": "2021-05-01-preview",
                  "name": "[concat(parameters('resourceName'), '/', 'Microsoft.Insights/', parameters('diagnosticSettingName'))]",
                  "properties": {
                    "workspaceId": "[parameters('logAnalytics')]",
                    "logs": [
                      {
                        "categoryGroup": "audit",
                        "enabled": "[equals(parameters('categoryGroup'), 'audit')]"
                      },
                      {
                        "categoryGroup": "allLogs",
                        "enabled": "[equals(parameters('categoryGroup'), 'allLogs')]"
                      }
                    ],
                    "metrics": []
                  }
                }
              ],
              "outputs": {
                "policy": {
                  "type": "string",
                  "value": "[concat('Diagnostic setting ', parameters('diagnosticSettingName'), ' for type Bastions (microsoft.network/bastionhosts), resourceName ', parameters('resourceName'), ' to Log Analytics ', parameters('logAnalytics'), ' configured')]"
                }
              }
            },
            "parameters": {
              "diagnosticSettingName": {
                "value": "[parameters('diagnosticSettingName')]"
              },
              "logAnalytics": {
                "value": "[parameters('logAnalytics')]"
              },
              "categoryGroup": {
                "value": "[parameters('categoryGroup')]"
              },
              "resourceName": {
                "value": "[field('name')]"
              }
            }
          }
        }
      }
    }
  }